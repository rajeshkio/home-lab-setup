apiVersion: v1
kind: Pod
metadata:
  annotations:
    istio.io/rev: default
    kubectl.kubernetes.io/default-container: cert-manager-controller
    kubectl.kubernetes.io/default-logs-container: cert-manager-controller
    prometheus.io/path: /stats/prometheus
    prometheus.io/port: "15020"
    prometheus.io/scrape: "true"
    sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["workload-socket","credential-socket","workload-certs","istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null,"revision":"default"}'
  creationTimestamp: "2025-03-12T12:50:27Z"
  generateName: cert-manager-85c6f7858d-
  labels:
    app: cert-manager
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/version: v1.17.1
    pod-template-hash: 85c6f7858d
    security.istio.io/tlsMode: istio
    service.istio.io/canonical-name: cert-manager
    service.istio.io/canonical-revision: v1.17.1
  name: cert-manager-85c6f7858d-4pl2c
  namespace: cert-manager
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: cert-manager-85c6f7858d
    uid: 38b7204c-1980-4e86-9c5e-726a4e3e14ed
  resourceVersion: "4585123"
  uid: e5902af2-0540-4485-b769-b49080bfe589
spec:
  containers:
  - args:
    - --v=2
    - --cluster-resource-namespace=$(POD_NAMESPACE)
    - --leader-election-namespace=kube-system
    - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.17.1
    - --max-concurrent-challenges=60
    env:
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: AWS_SHARED_CREDENTIALS_FILE
      value: /shared-aws-credentials/aws-credentials
    - name: AWS_DEFAULT_REGION
      value: ap-south-1
    - name: AWS_EC2_METADATA_DISABLED
      value: "true"
    image: quay.io/jetstack/cert-manager-controller:v1.17.1
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 8
      httpGet:
        path: /app-health/cert-manager-controller/livez
        port: 15020
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 15
    name: cert-manager-controller
    ports:
    - containerPort: 9402
      name: http-metrics
      protocol: TCP
    - containerPort: 9403
      name: http-healthz
      protocol: TCP
    resources: {}
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      readOnlyRootFilesystem: true
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /shared-aws-credentials
      name: shared-aws-credentials
      readOnly: true
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-njxn2
      readOnly: true
  - command:
    - /bin/sh
    - -c
    - /bin/sh /script-aws/start-aws-credentials-refresh.sh
    image: alpine
    imagePullPolicy: Always
    name: aws-credentials-refresher
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /shared-aws-credentials
      name: shared-aws-credentials
    - mountPath: /scripts
      name: generate-aws-creds-script
    - mountPath: /script-aws
      name: start-aws-credentials-refresh
    - mountPath: /etc/aws-roles-anywhere
      name: aws-roles-anywhere-secret
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-njxn2
      readOnly: true
  - command:
    - sh
    - -c
    - sleep infinity
    image: busybox
    imagePullPolicy: Always
    name: debug
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /shared-aws-credentials
      name: shared-aws-credentials
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-njxn2
      readOnly: true
  - args:
    - proxy
    - sidecar
    - --domain
    - $(POD_NAMESPACE).svc.cluster.local
    - --proxyLogLevel=warning
    - --proxyComponentLogLevel=misc:error
    - --log_output_level=default:info
    env:
    - name: PILOT_CERT_PROVIDER
      value: istiod
    - name: CA_ADDR
      value: istiod.istio-system.svc:15012
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    - name: INSTANCE_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.podIP
    - name: SERVICE_ACCOUNT
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.serviceAccountName
    - name: HOST_IP
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: status.hostIP
    - name: ISTIO_CPU_LIMIT
      valueFrom:
        resourceFieldRef:
          divisor: "0"
          resource: limits.cpu
    - name: PROXY_CONFIG
      value: |
        {}
    - name: ISTIO_META_POD_PORTS
      value: |-
        [
            {"name":"http-metrics","containerPort":9402,"protocol":"TCP"}
            ,{"name":"http-healthz","containerPort":9403,"protocol":"TCP"}
        ]
    - name: ISTIO_META_APP_CONTAINERS
      value: cert-manager-controller,aws-credentials-refresher,debug
    - name: GOMEMLIMIT
      valueFrom:
        resourceFieldRef:
          divisor: "0"
          resource: limits.memory
    - name: GOMAXPROCS
      valueFrom:
        resourceFieldRef:
          divisor: "0"
          resource: limits.cpu
    - name: ISTIO_META_CLUSTER_ID
      value: Kubernetes
    - name: ISTIO_META_NODE_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: spec.nodeName
    - name: ISTIO_META_INTERCEPTION_MODE
      value: REDIRECT
    - name: ISTIO_META_WORKLOAD_NAME
      value: cert-manager
    - name: ISTIO_META_OWNER
      value: kubernetes://apis/apps/v1/namespaces/cert-manager/deployments/cert-manager
    - name: ISTIO_META_MESH_ID
      value: cluster.local
    - name: TRUST_DOMAIN
      value: cluster.local
    - name: ISTIO_PROMETHEUS_ANNOTATIONS
      value: '{"scrape":"true","path":"/metrics","port":"9402"}'
    - name: ISTIO_KUBE_APP_PROBERS
      value: '{"/app-health/cert-manager-controller/livez":{"httpGet":{"path":"/livez","port":9403,"scheme":"HTTP"},"timeoutSeconds":15}}'
    image: docker.io/istio/proxyv2:1.25.0
    imagePullPolicy: IfNotPresent
    name: istio-proxy
    ports:
    - containerPort: 15090
      name: http-envoy-prom
      protocol: TCP
    readinessProbe:
      failureThreshold: 4
      httpGet:
        path: /healthz/ready
        port: 15021
        scheme: HTTP
      periodSeconds: 15
      successThreshold: 1
      timeoutSeconds: 3
    resources:
      limits:
        cpu: "2"
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 128Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
      privileged: false
      readOnlyRootFilesystem: true
      runAsGroup: 1337
      runAsNonRoot: true
      runAsUser: 1337
    startupProbe:
      failureThreshold: 600
      httpGet:
        path: /healthz/ready
        port: 15021
        scheme: HTTP
      periodSeconds: 1
      successThreshold: 1
      timeoutSeconds: 3
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/workload-spiffe-uds
      name: workload-socket
    - mountPath: /var/run/secrets/credential-uds
      name: credential-socket
    - mountPath: /var/run/secrets/workload-spiffe-credentials
      name: workload-certs
    - mountPath: /var/run/secrets/istio
      name: istiod-ca-cert
    - mountPath: /var/lib/istio/data
      name: istio-data
    - mountPath: /etc/istio/proxy
      name: istio-envoy
    - mountPath: /var/run/secrets/tokens
      name: istio-token
    - mountPath: /etc/istio/pod
      name: istio-podinfo
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-njxn2
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: false
  initContainers:
  - command:
    - /bin/sh
    - -c
    - /bin/sh /scripts/generate-aws-crds.sh
    image: alpine
    imagePullPolicy: Always
    name: generate-aws-creds
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /scripts
      name: generate-aws-creds-script
    - mountPath: /etc/aws-roles-anywhere
      name: aws-roles-anywhere-secret
    - mountPath: /shared-aws-credentials
      name: shared-aws-credentials
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-njxn2
      readOnly: true
  - args:
    - istio-iptables
    - -p
    - "15001"
    - -z
    - "15006"
    - -u
    - "1337"
    - -m
    - REDIRECT
    - -i
    - '*'
    - -x
    - ""
    - -b
    - '*'
    - -d
    - 15090,15021,15020
    - --log_output_level=default:info
    image: docker.io/istio/proxyv2:1.25.0
    imagePullPolicy: IfNotPresent
    name: istio-init
    resources:
      limits:
        cpu: "2"
        memory: 1Gi
      requests:
        cpu: 100m
        memory: 128Mi
    securityContext:
      allowPrivilegeEscalation: false
      capabilities:
        add:
        - NET_ADMIN
        - NET_RAW
        drop:
        - ALL
      privileged: false
      readOnlyRootFilesystem: false
      runAsGroup: 0
      runAsNonRoot: false
      runAsUser: 0
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-njxn2
      readOnly: true
  nodeName: rajesh-rockylinux
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: cert-manager
  serviceAccountName: cert-manager
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - emptyDir: {}
    name: workload-socket
  - emptyDir: {}
    name: credential-socket
  - emptyDir: {}
    name: workload-certs
  - emptyDir:
      medium: Memory
    name: istio-envoy
  - emptyDir: {}
    name: istio-data
  - downwardAPI:
      defaultMode: 420
      items:
      - fieldRef:
          apiVersion: v1
          fieldPath: metadata.labels
        path: labels
      - fieldRef:
          apiVersion: v1
          fieldPath: metadata.annotations
        path: annotations
    name: istio-podinfo
  - name: istio-token
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          audience: istio-ca
          expirationSeconds: 43200
          path: istio-token
  - configMap:
      defaultMode: 420
      name: istio-ca-root-cert
    name: istiod-ca-cert
  - emptyDir: {}
    name: shared-aws-credentials
  - configMap:
      defaultMode: 420
      name: generate-aws-creds-script
    name: generate-aws-creds-script
  - name: aws-roles-anywhere-secret
    secret:
      defaultMode: 420
      secretName: aws-roles-anywhere
  - configMap:
      defaultMode: 420
      name: start-aws-credentials-refresh
    name: start-aws-credentials-refresh
  - name: kube-api-access-njxn2
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2025-03-12T13:00:43Z"
    status: "True"
    type: PodReadyToStartContainers
  - lastProbeTime: null
    lastTransitionTime: "2025-03-12T13:01:30Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2025-03-12T15:25:14Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2025-03-12T15:25:14Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2025-03-12T13:00:29Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: containerd://3aeeb2d7e3bb4647667275f56157009092b8e84fafabc8f724ba8d1a86357e51
    image: docker.io/library/alpine:3.21
    imageID: docker.io/library/alpine@sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c
    lastState:
      terminated:
        containerID: containerd://d1931cf00b82b6d555c79359baf6cd29ed3072f1e72f6d107d85dcabc8544001
        exitCode: 0
        finishedAt: "2025-03-12T13:01:35Z"
        reason: Completed
        startedAt: "2025-03-12T13:01:35Z"
    name: aws-credentials-refresher
    ready: true
    restartCount: 1
    started: true
    state:
      running:
        startedAt: "2025-03-12T13:01:43Z"
    volumeMounts:
    - mountPath: /shared-aws-credentials
      name: shared-aws-credentials
    - mountPath: /scripts
      name: generate-aws-creds-script
    - mountPath: /script-aws
      name: start-aws-credentials-refresh
    - mountPath: /etc/aws-roles-anywhere
      name: aws-roles-anywhere-secret
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-njxn2
      readOnly: true
      recursiveReadOnly: Disabled
  - containerID: containerd://eaa8722c010dd651ffa94529628be7197b4512c9b67968b2a1ebcf8324abdd47
    image: quay.io/jetstack/cert-manager-controller:v1.17.1
    imageID: quay.io/jetstack/cert-manager-controller@sha256:9339837eaaa7852509fa4c89c12543721d79d7facf57f29adec7c96fffe408d6
    lastState: {}
    name: cert-manager-controller
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-03-12T13:01:31Z"
    volumeMounts:
    - mountPath: /shared-aws-credentials
      name: shared-aws-credentials
      readOnly: true
      recursiveReadOnly: Disabled
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-njxn2
      readOnly: true
      recursiveReadOnly: Disabled
  - containerID: containerd://d05316bbc18a0ce8603a34b274c71566628f3b17823164e215fa7b9c8875bab4
    image: docker.io/library/busybox:latest
    imageID: docker.io/library/busybox@sha256:498a000f370d8c37927118ed80afe8adc38d1edcbfc071627d17b25c88efcab0
    lastState: {}
    name: debug
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-03-12T13:01:37Z"
    volumeMounts:
    - mountPath: /shared-aws-credentials
      name: shared-aws-credentials
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-njxn2
      readOnly: true
      recursiveReadOnly: Disabled
  - containerID: containerd://3c123950055d1eb6bd5cc70ed0d754a3cf688c74ccd508eb9d95ca26fbbd5b23
    image: docker.io/istio/proxyv2:1.25.0
    imageID: docker.io/istio/proxyv2@sha256:8489a74f0a88714ce2cf523289e8ea9bba67bcfc5b214754deace8de69a8293d
    lastState: {}
    name: istio-proxy
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2025-03-12T13:01:38Z"
    volumeMounts:
    - mountPath: /var/run/secrets/workload-spiffe-uds
      name: workload-socket
    - mountPath: /var/run/secrets/credential-uds
      name: credential-socket
    - mountPath: /var/run/secrets/workload-spiffe-credentials
      name: workload-certs
    - mountPath: /var/run/secrets/istio
      name: istiod-ca-cert
    - mountPath: /var/lib/istio/data
      name: istio-data
    - mountPath: /etc/istio/proxy
      name: istio-envoy
    - mountPath: /var/run/secrets/tokens
      name: istio-token
    - mountPath: /etc/istio/pod
      name: istio-podinfo
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-njxn2
      readOnly: true
      recursiveReadOnly: Disabled
  hostIP: 192.168.90.101
  hostIPs:
  - ip: 192.168.90.101
  initContainerStatuses:
  - containerID: containerd://d886a519875dd3bf73cb5badfd2986e74ec3aee761ea0937bca51f4d8c6f3327
    image: docker.io/library/alpine:3.21
    imageID: docker.io/library/alpine@sha256:a8560b36e8b8210634f77d9f7f9efd7ffa463e380b75e2e74aff4511df3ef88c
    lastState: {}
    name: generate-aws-creds
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: containerd://d886a519875dd3bf73cb5badfd2986e74ec3aee761ea0937bca51f4d8c6f3327
        exitCode: 0
        finishedAt: "2025-03-12T13:00:49Z"
        reason: Completed
        startedAt: "2025-03-12T13:00:42Z"
    volumeMounts:
    - mountPath: /scripts
      name: generate-aws-creds-script
    - mountPath: /etc/aws-roles-anywhere
      name: aws-roles-anywhere-secret
    - mountPath: /shared-aws-credentials
      name: shared-aws-credentials
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-njxn2
      readOnly: true
      recursiveReadOnly: Disabled
  - containerID: containerd://f792ba9b84e2872e589a500db59c0bac4dfda8c9b07ded0ae6282f0537082bb6
    image: docker.io/istio/proxyv2:1.25.0
    imageID: docker.io/istio/proxyv2@sha256:8489a74f0a88714ce2cf523289e8ea9bba67bcfc5b214754deace8de69a8293d
    lastState: {}
    name: istio-init
    ready: true
    restartCount: 0
    started: false
    state:
      terminated:
        containerID: containerd://f792ba9b84e2872e589a500db59c0bac4dfda8c9b07ded0ae6282f0537082bb6
        exitCode: 0
        finishedAt: "2025-03-12T13:01:11Z"
        reason: Completed
        startedAt: "2025-03-12T13:01:11Z"
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-njxn2
      readOnly: true
      recursiveReadOnly: Disabled
  phase: Running
  podIP: 10.42.1.183
  podIPs:
  - ip: 10.42.1.183
  qosClass: Burstable
  startTime: "2025-03-12T13:00:31Z"
